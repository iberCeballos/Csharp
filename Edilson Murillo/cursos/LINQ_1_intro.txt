Introducción a LINQ
Imagina que estás creando un nuevo juego en C#, con docenas de personajes para administrar en tu base de datos. ¿Cómo accederías a todos ellos? ¿Qué sucede si necesita aplicar un filtro? ¿Qué pasa si necesita formatear el nombre de cada personaje?

Puede pensar en almacenar caracteres en una lista y recorrer cada elemento con un foreachbucle. Tendría que escribir ifdeclaraciones anidadas, reformatear cada elemento y almacenar cada resultado en una nueva lista.

El resultado no es bonito.

Supongamos que queremos encontrar todos los nombres en una lista que tienen más de 6 letras y devolverlos en mayúsculas. Puede ver cómo se vería en Program.cs en el editor de código.

Y recuerde que esto solo funciona en un archivo C# en ejecución. ¿Qué sucede si la base de datos se almacenó en un servidor separado en algún lugar y se implementó con SQL en lugar de C#?

La solución es LINQ . Funciona para selecciones y transformaciones complejas, y funciona en fuentes de datos locales y remotas. Cada selección/transformación se denomina consulta y LINQ nos brinda una nueva sintaxis y métodos para escribirlas.

Imagine LINQ como un complemento de C# y .NET. Una vez que importe las características de LINQ, puede escribir una nueva sintaxis, como:

string[] names = { "Tiana", "Dwayne", "Helena" };
var filteredNames = from n in names
  where n.Contains("a")
  select n;
Y puede usar nuevos métodos en colecciones, como Where():

var shortNames = names.Where(n => n.Length < 4);
En esta lección aprenderás:

Cómo importar las características de LINQ a C#
Cómo ejecutar consultas LINQ en conjuntos de datos
Cómo identificar el método y la sintaxis de consulta
Operadores básicos, como Select, Whereyfrom
Instrucciones
1 .
En Program.cs , compare los dos enfoques para consultar datos:

Sin LINQ, usamos un foreachbucle y una ifdeclaración anidada.
Con LINQ, escribimos una consulta de tres líneas.
¡Ejecute el código para verlos en acción!


using System;
using System.Collections.Generic;
using System.Linq;

namespace LearnLinq
{
  class Program
  {
    static void Main()
    {
      List<string> heroes = new List<string> { "D. Va", "Lucio", "Mercy", "Soldier 76", "Pharah", "Reinhardt" };
      
      // Approach 1: without LINQ
      List<string> longLoudHeroes = new List<string>();
      
      foreach (string hero in heroes)
      {
        if (hero.Length > 6)
        {
          string formatted = hero.ToUpper();
          longLoudHeroes.Add(formatted);
        }
      }
      
      // Approach 2: with LINQ
      var longLoudHeroes2 = from h in heroes
            where h.Length > 6
            select h.ToUpper();
      
      // Printing...
      Console.WriteLine("Your long loud heroes are...");
      
      foreach (string hero in longLoudHeroes2)
      {
        Console.WriteLine(hero);
      }
    }
  }
}
